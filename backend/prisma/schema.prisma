generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(uuid())
  email      String  @unique
  // name           String?
  password   String
  isVerified Boolean @default(false)

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  resources Resource[]

  // Requests: two relations to Request (borrower / owner) -> use relation names
  requestsMade     Request[] @relation("RequestsMade") // as borrower
  requestsReceived Request[] @relation("RequestsReceived") // as owner

  //
}

model Resource {
  id          String  @id @default(uuid())
  title       String
  category    String
  description String?
  image       String?
  available   Boolean @default(true)

  ownerId String
  owner   User   @relation(fields: [ownerId], references: [id])

  requests Request[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Request {
  id String @id @default(uuid())

  resourceId String
  resource   Resource @relation(fields: [resourceId], references: [id])

  borrowerId String
  borrower   User   @relation("RequestsMade", fields: [borrowerId], references: [id])

  ownerId String
  owner   User   @relation("RequestsReceived", fields: [ownerId], references: [id])

  status    RequestStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
